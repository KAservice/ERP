// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 5081 $
// File generated on 25.03.2009 20:57:27 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Program Files\SCANCODE\Компонента 1С для принтеров Godex (ESC)\GodexESC.dll (1)
// LIBID: {4F0D4571-0E7B-11D1-A486-004095E1DAEA}
// LCID: 0
// Helpfile: 
// HelpString: V7 AddIn 1.0 Type Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\system32\stdole2.tlb)
// ************************************************************************ //
#ifndef   AddInLib_TLBH
#define   AddInLib_TLBH

#pragma option push -b -w-inl

#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if defined(USING_ATLVCL) || defined(USING_ATL)
#if !defined(__TLB_NO_EVENT_WRAPPERS)
#include <atl/atlmod.h>
#endif
#endif


// *********************************************************************//
// Forward reference of some VCL types (to avoid including STDVCL.HPP)    
// *********************************************************************//
namespace Stdvcl {class IStrings; class IStringsDisp;}
using namespace Stdvcl;
typedef TComInterface<IStrings> IStringsPtr;
typedef TComInterface<IStringsDisp> IStringsDispPtr;

namespace Addinlib_tlb
{

// *********************************************************************//
// HelpString: V7 AddIn 1.0 Type Library
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLSID_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
extern __declspec (package) const GUID LIBID_AddInLib;
extern __declspec (package) const GUID IID_IInitDone;
extern __declspec (package) const GUID IID_ILanguageExtender;
extern __declspec (package) const GUID IID_IPropertyPage;
extern __declspec (package) const GUID CLSID_AddIn;
extern __declspec (package) const GUID IID_IPropertyPageSite;
extern __declspec (package) const GUID GUID_wireHWND;
extern __declspec (package) const GUID GUID_UINT_PTR;
extern __declspec (package) const GUID GUID___MIDL_IWinTypes_0009;
extern __declspec (package) const GUID GUID__RemotableHandle;
extern __declspec (package) const GUID GUID_LONG_PTR;
extern __declspec (package) const GUID GUID_tagPOINT;
extern __declspec (package) const GUID GUID_tagMSG;
extern __declspec (package) const GUID GUID_tagRECT;
extern __declspec (package) const GUID GUID_tagSIZE;
extern __declspec (package) const GUID GUID_tagPROPPAGEINFO;
extern __declspec (package) const GUID IID_IPropertyBag;
extern __declspec (package) const GUID IID_IPropertyProfile;
extern __declspec (package) const GUID IID_IAsyncEvent;
extern __declspec (package) const GUID IID_IErrorLog;
extern __declspec (package) const GUID IID_IStatusLine;
extern __declspec (package) const GUID CLSID_AddInConnection;

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
union     __MIDL_IWinTypes_0009;
struct    tag_RemotableHandle;
typedef   tag_RemotableHandle _RemotableHandle;

struct    tagtagPOINT;
typedef   tagtagPOINT tagPOINT;

struct    tagtagMSG;
typedef   tagtagMSG tagMSG;

struct    tagtagRECT;
typedef   tagtagRECT tagRECT;

struct    tagtagSIZE;
typedef   tagtagSIZE tagSIZE;

struct    tagtagPROPPAGEINFO;
typedef   tagtagPROPPAGEINFO tagPROPPAGEINFO;

interface DECLSPEC_UUID("{AB634001-F13D-11D0-A459-004095E1DAEA}") IInitDone;
typedef TComInterface<IInitDone, &IID_IInitDone> IInitDonePtr;

interface DECLSPEC_UUID("{AB634003-F13D-11D0-A459-004095E1DAEA}") ILanguageExtender;
typedef TComInterface<ILanguageExtender, &IID_ILanguageExtender> ILanguageExtenderPtr;

interface DECLSPEC_UUID("{B196B28D-BAB4-101A-B69C-00AA00341D07}") IPropertyPage;
typedef TComInterface<IPropertyPage, &IID_IPropertyPage> IPropertyPagePtr;

interface DECLSPEC_UUID("{B196B28C-BAB4-101A-B69C-00AA00341D07}") IPropertyPageSite;
typedef TComInterface<IPropertyPageSite, &IID_IPropertyPageSite> IPropertyPageSitePtr;

interface DECLSPEC_UUID("{55272A00-42CB-11CE-8135-00AA004BB851}") IPropertyBag;
typedef TComInterface<IPropertyBag, &IID_IPropertyBag> IPropertyBagPtr;

interface DECLSPEC_UUID("{AB634002-F13D-11D0-A459-004095E1DAEA}") IPropertyProfile;
typedef TComInterface<IPropertyProfile, &IID_IPropertyProfile> IPropertyProfilePtr;

interface DECLSPEC_UUID("{AB634004-F13D-11D0-A459-004095E1DAEA}") IAsyncEvent;
typedef TComInterface<IAsyncEvent, &IID_IAsyncEvent> IAsyncEventPtr;

interface DECLSPEC_UUID("{3127CA40-446E-11CE-8135-00AA004BB851}") IErrorLog;
typedef TComInterface<IErrorLog, &IID_IErrorLog> IErrorLogPtr;

interface DECLSPEC_UUID("{AB634005-F13D-11D0-A459-004095E1DAEA}") IStatusLine;
typedef TComInterface<IStatusLine, &IID_IStatusLine> IStatusLinePtr;


// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
//                                                                        
// The LIBID_OF_ macro(s) map a LIBID_OF_CoClassName to the GUID of this  
// TypeLibrary. It simplifies the updating of macros when CoClass name    
// change.                                                                
// *********************************************************************//
typedef IInitDone AddIn;
typedef IInitDonePtr AddInPtr;
typedef IPropertyProfile AddInConnection;
typedef IPropertyProfilePtr AddInConnectionPtr;

#define LIBID_OF_AddIn (&LIBID_AddInLib)
#define LIBID_OF_AddInConnection (&LIBID_AddInLib)

// *********************************************************************//
// Declaration of Aliases defined in Type Library                         
// *********************************************************************//
typedef Addinlib_tlb::_RemotableHandle* wireHWND;
typedef unsigned_long UINT_PTR;
typedef long LONG_PTR;

// *********************************************************************//
// Declaration of Structures and Unions defined in Type Library           
// *********************************************************************//
union  __MIDL_IWinTypes_0009
{
  long hInproc;
  long hRemote;
};

struct tag_RemotableHandle
{
  long fContext;
  Addinlib_tlb::__MIDL_IWinTypes_0009 u;
};

struct tagtagPOINT
{
  long x;
  long y;
};

struct tagtagMSG
{
  Addinlib_tlb::wireHWND hwnd;
  unsigned message;
  Addinlib_tlb::UINT_PTR wParam;
  Addinlib_tlb::LONG_PTR lParam;
  unsigned_long time;
  Addinlib_tlb::tagPOINT pt;
};

struct tagtagRECT
{
  long left;
  long top;
  long right;
  long bottom;
};

struct tagtagSIZE
{
  long cx;
  long cy;
};

struct tagtagPROPPAGEINFO
{
  unsigned_long cb;
  LPWSTR pszTitle;
  Addinlib_tlb::tagSIZE size;
  LPWSTR pszDocString;
  LPWSTR pszHelpFile;
  unsigned_long dwHelpContext;
};

// *********************************************************************//
// Interface: IInitDone
// Flags:     (0)
// GUID:      {AB634001-F13D-11D0-A459-004095E1DAEA}
// *********************************************************************//
interface IInitDone  : public IUnknown
{
public:
  // [-1] method Init
  virtual HRESULT STDMETHODCALLTYPE Init(LPDISPATCH pConnection/*[in]*/) = 0;
  // [-1] method Done
  virtual HRESULT STDMETHODCALLTYPE Done(void) = 0;
  // [-1] method GetInfo
  virtual HRESULT STDMETHODCALLTYPE GetInfo(LPSAFEARRAY* pInfo/*[in,out]*/) = 0;
};

// *********************************************************************//
// Interface: ILanguageExtender
// Flags:     (0)
// GUID:      {AB634003-F13D-11D0-A459-004095E1DAEA}
// *********************************************************************//
interface ILanguageExtender  : public IUnknown
{
public:
  // [-1] method RegisterExtensionAs
  virtual HRESULT STDMETHODCALLTYPE RegisterExtensionAs(BSTR* bstrExtensionName/*[in,out]*/) = 0;
  // [-1] method GetNProps
  virtual HRESULT STDMETHODCALLTYPE GetNProps(long* plProps/*[in,out]*/) = 0;
  // [-1] method FindProp
  virtual HRESULT STDMETHODCALLTYPE FindProp(BSTR bstrPropName/*[in]*/, long* plPropNum/*[in,out]*/) = 0;
  // [-1] method GetPropName
  virtual HRESULT STDMETHODCALLTYPE GetPropName(long lPropNum/*[in]*/, long lPropAlias/*[in]*/, 
                                                BSTR* pbstrPropName/*[in,out]*/) = 0;
  // [-1] method GetPropVal
  virtual HRESULT STDMETHODCALLTYPE GetPropVal(long lPropNum/*[in]*/, 
                                               VARIANT* pvarPropVal/*[in,out]*/) = 0;
  // [-1] method SetPropVal
  virtual HRESULT STDMETHODCALLTYPE SetPropVal(long lPropNum/*[in]*/, VARIANT* varPropVal/*[in]*/) = 0;
  // [-1] method IsPropReadable
  virtual HRESULT STDMETHODCALLTYPE IsPropReadable(long lPropNum/*[in]*/, 
                                                   long* pboolPropRead/*[in,out]*/) = 0;
  // [-1] method IsPropWritable
  virtual HRESULT STDMETHODCALLTYPE IsPropWritable(long lPropNum/*[in]*/, 
                                                   long* pboolPropWrite/*[in,out]*/) = 0;
  // [-1] method GetNMethods
  virtual HRESULT STDMETHODCALLTYPE GetNMethods(long* plMethods/*[in,out]*/) = 0;
  // [-1] method FindMethod
  virtual HRESULT STDMETHODCALLTYPE FindMethod(BSTR bstrMethodName, long* plMethodNum/*[in,out]*/) = 0;
  // [-1] method GetMethodName
  virtual HRESULT STDMETHODCALLTYPE GetMethodName(long lMethodNum/*[in]*/, long lMethodAlias/*[in]*/, 
                                                  BSTR* pbstrMethodName/*[in,out]*/) = 0;
  // [-1] method GetNParams
  virtual HRESULT STDMETHODCALLTYPE GetNParams(long lMethodNum/*[in]*/, long* plParams/*[in,out]*/) = 0;
  // [-1] method GetParamDefValue
  virtual HRESULT STDMETHODCALLTYPE GetParamDefValue(long lMethodNum/*[in]*/, long lParamNum/*[in]*/, 
                                                     VARIANT* pvarParamDefValue/*[in,out]*/) = 0;
  // [-1] method HasRetVal
  virtual HRESULT STDMETHODCALLTYPE HasRetVal(long lMethodNum/*[in]*/, 
                                              long* pboolRetValue/*[in,out]*/) = 0;
  // [-1] method CallAsProc
  virtual HRESULT STDMETHODCALLTYPE CallAsProc(long lMethodNum/*[in]*/, 
                                               LPSAFEARRAY* paParams/*[in]*/) = 0;
  // [-1] method CallAsFunc
  virtual HRESULT STDMETHODCALLTYPE CallAsFunc(long lMethodNum/*[in]*/, 
                                               VARIANT* pvarRetValue/*[in,out]*/, 
                                               LPSAFEARRAY* paParams/*[in]*/) = 0;
};

// *********************************************************************//
// Interface: IPropertyPage
// Flags:     (0)
// GUID:      {B196B28D-BAB4-101A-B69C-00AA00341D07}
// *********************************************************************//
interface IPropertyPage  : public IUnknown
{
public:
  virtual HRESULT STDMETHODCALLTYPE SetPageSite(Addinlib_tlb::IPropertyPageSite* pPageSite/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Activate(Addinlib_tlb::wireHWND hWndParent/*[in]*/, 
                                             Addinlib_tlb::tagRECT* pRect/*[in]*/, 
                                             long bModal/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Deactivate(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPageInfo(Addinlib_tlb::tagPROPPAGEINFO* pPageInfo/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE SetObjects(unsigned_long cObjects/*[in]*/, 
                                               LPUNKNOWN* ppUnk/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Show(unsigned nCmdShow/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Move(Addinlib_tlb::tagRECT* pRect/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE IsPageDirty(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Apply(void) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Help(LPWSTR pszHelpDir/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator(Addinlib_tlb::tagMSG* pMsg/*[in]*/) = 0; // [-1]
};

// *********************************************************************//
// Interface: IPropertyPageSite
// Flags:     (0)
// GUID:      {B196B28C-BAB4-101A-B69C-00AA00341D07}
// *********************************************************************//
interface IPropertyPageSite  : public IUnknown
{
public:
  virtual HRESULT STDMETHODCALLTYPE OnStatusChange(unsigned_long dwFlags/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetLocaleID(unsigned_long* pLocaleID/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE GetPageContainer(LPUNKNOWN* ppUnk/*[out]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator(Addinlib_tlb::tagMSG* pMsg/*[in]*/) = 0; // [-1]
};

// *********************************************************************//
// Interface: IPropertyBag
// Flags:     (0)
// GUID:      {55272A00-42CB-11CE-8135-00AA004BB851}
// *********************************************************************//
interface IPropertyBag  : public IUnknown
{
public:
  virtual HRESULT STDMETHODCALLTYPE RemoteRead(LPWSTR pszPropName/*[in]*/, VARIANT* pVar/*[out]*/, 
                                               Addinlib_tlb::IErrorLog* pErrorLog/*[in]*/, 
                                               unsigned_long varType/*[in]*/, 
                                               LPUNKNOWN pUnkObj/*[in]*/) = 0; // [-1]
  virtual HRESULT STDMETHODCALLTYPE Write(LPWSTR pszPropName/*[in]*/, VARIANT* pVar/*[in]*/) = 0; // [-1]
};

// *********************************************************************//
// Interface: IPropertyProfile
// Flags:     (0)
// GUID:      {AB634002-F13D-11D0-A459-004095E1DAEA}
// *********************************************************************//
interface IPropertyProfile  : public Addinlib_tlb::IPropertyBag
{
public:
  // [1610743808] method RegisterProfileAs
  virtual HRESULT STDMETHODCALLTYPE RegisterProfileAs(BSTR bstrProfileName) = 0;
};

// *********************************************************************//
// Interface: IAsyncEvent
// Flags:     (0)
// GUID:      {AB634004-F13D-11D0-A459-004095E1DAEA}
// *********************************************************************//
interface IAsyncEvent  : public IUnknown
{
public:
  // [-1] method SetEventBufferDepth
  virtual HRESULT STDMETHODCALLTYPE SetEventBufferDepth(long lDepth) = 0;
  // [-1] method GetEventBufferDepth
  virtual HRESULT STDMETHODCALLTYPE GetEventBufferDepth(long* plDepth) = 0;
  // [-1] method ExternalEvent
  virtual HRESULT STDMETHODCALLTYPE ExternalEvent(BSTR bstrSource, BSTR bstrMessage, BSTR bstrData) = 0;
  // [-1] method CleanBuffer
  virtual HRESULT STDMETHODCALLTYPE CleanBuffer(void) = 0;
};

// *********************************************************************//
// Interface: IErrorLog
// Flags:     (0)
// GUID:      {3127CA40-446E-11CE-8135-00AA004BB851}
// *********************************************************************//
interface IErrorLog  : public IUnknown
{
public:
  virtual HRESULT STDMETHODCALLTYPE AddError(LPWSTR pszPropName/*[in]*/, 
                                             EXCEPINFO* pExcepInfo/*[in]*/) = 0; // [-1]
};

// *********************************************************************//
// Interface: IStatusLine
// Flags:     (0)
// GUID:      {AB634005-F13D-11D0-A459-004095E1DAEA}
// *********************************************************************//
interface IStatusLine  : public IUnknown
{
public:
  // [-1] method SetStatusLine
  virtual HRESULT STDMETHODCALLTYPE SetStatusLine(BSTR bstrStatusLine) = 0;
  // [-1] method ResetStatusLine
  virtual HRESULT STDMETHODCALLTYPE ResetStatusLine(void) = 0;
};

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)
// *********************************************************************//
// SmartIntf: TCOMIInitDone
// Interface: IInitDone
// *********************************************************************//
template <class T /* IInitDone */ >
class TCOMIInitDoneT : public TComInterface<IInitDone>, public TComInterfaceBase<IUnknown>
{
public:
  TCOMIInitDoneT() {}
  TCOMIInitDoneT(IInitDone *intf, bool addRef = false) : TComInterface<IInitDone>(intf, addRef) {}
  TCOMIInitDoneT(const TCOMIInitDoneT& src) : TComInterface<IInitDone>(src) {}
  TCOMIInitDoneT& operator=(const TCOMIInitDoneT& src) { Bind(src, true); return *this;}

  HRESULT         __fastcall Init(LPDISPATCH pConnection/*[in]*/);
  HRESULT         __fastcall Done(void);
  HRESULT         __fastcall GetInfo(LPSAFEARRAY* pInfo/*[in,out]*/);

};
typedef TCOMIInitDoneT<IInitDone> TCOMIInitDone;

typedef TComInterface<ILanguageExtender>  TCOMILanguageExtender;

typedef TComInterface<IPropertyPage>  TCOMIPropertyPage;

typedef TComInterface<IPropertyPageSite>  TCOMIPropertyPageSite;

typedef TComInterface<IPropertyBag>  TCOMIPropertyBag;

// *********************************************************************//
// SmartIntf: TCOMIPropertyProfile
// Interface: IPropertyProfile
// *********************************************************************//
template <class T /* IPropertyProfile */ >
class TCOMIPropertyProfileT : public TComInterface<IPropertyProfile>, public TComInterfaceBase<IUnknown>
{
public:
  TCOMIPropertyProfileT() {}
  TCOMIPropertyProfileT(IPropertyProfile *intf, bool addRef = false) : TComInterface<IPropertyProfile>(intf, addRef) {}
  TCOMIPropertyProfileT(const TCOMIPropertyProfileT& src) : TComInterface<IPropertyProfile>(src) {}
  TCOMIPropertyProfileT& operator=(const TCOMIPropertyProfileT& src) { Bind(src, true); return *this;}

  HRESULT         __fastcall RegisterProfileAs(BSTR bstrProfileName);

};
typedef TCOMIPropertyProfileT<IPropertyProfile> TCOMIPropertyProfile;

typedef TComInterface<IAsyncEvent>  TCOMIAsyncEvent;

typedef TComInterface<IErrorLog>  TCOMIErrorLog;

typedef TComInterface<IStatusLine>  TCOMIStatusLine;

// *********************************************************************//
// SmartIntf: TCOMIInitDone
// Interface: IInitDone
// *********************************************************************//
template <class T> HRESULT __fastcall
TCOMIInitDoneT<T>::Init(LPDISPATCH pConnection/*[in]*/)
{
  return (*this)->Init(pConnection);
}

template <class T> HRESULT __fastcall
TCOMIInitDoneT<T>::Done(void)
{
  return (*this)->Done();
}

template <class T> HRESULT __fastcall
TCOMIInitDoneT<T>::GetInfo(LPSAFEARRAY* pInfo/*[in,out]*/)
{
  return (*this)->GetInfo(pInfo);
}

// *********************************************************************//
// SmartIntf: TCOMIPropertyProfile
// Interface: IPropertyProfile
// *********************************************************************//
template <class T> HRESULT __fastcall
TCOMIPropertyProfileT<T>::RegisterProfileAs(BSTR bstrProfileName)
{
  return (*this)->RegisterProfileAs(bstrProfileName);
}

// *********************************************************************//
// The following typedefs expose classes (named CoCoClassName) that       
// provide static Create() and CreateRemote(LPWSTR machineName) methods   
// for creating an instance of an exposed object. These functions can     
// be used by client wishing to automate CoClasses exposed by this        
// typelibrary.                                                           
// *********************************************************************//

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AddIn
// Interface: TCOMIInitDone
// *********************************************************************//
typedef TCoClassCreatorT<TCOMIInitDone, IInitDone, &CLSID_AddIn, &IID_IInitDone> CoAddIn;

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : AddInConnection
// Interface: TCOMIPropertyProfile
// *********************************************************************//
typedef TCoClassCreatorT<TCOMIPropertyProfile, IPropertyProfile, &CLSID_AddInConnection, &IID_IPropertyProfile> CoAddInConnection;
#endif  //   __TLB_NO_INTERFACE_WRAPPERS


};     // namespace Addinlib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Addinlib_tlb;
#endif

#pragma option pop

#endif // AddInLib_TLBH
