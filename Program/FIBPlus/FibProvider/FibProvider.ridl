// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 11.09.2010 15:40:50 (- $Rev: 12980 $, 5351317).

[
  uuid(F7F382DC-0C05-4C91-B834-FF06FCDA5A4B),
  version(1.0)

]
library FibProvider
{

  importlib("stdole2.tlb");

  interface IQueryRead;
  coclass QueryRead;
  interface IQueryUpdate;
  coclass QueryUpdate;
  interface IDMConnectionImpl;
  coclass DMConnectionImpl;


  [
    uuid(9067E6F0-E409-4886-972F-0A94E859DC18),
    helpstring("Dispatch interface for QueryRead Object"),
    dual,
    oleautomation
  ]
  interface IQueryRead: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall flError([out, retval] int* result);
    [propget, id(0x000000CA)]
    HRESULT _stdcall TextError([out, retval] BSTR* Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall RecordCount([out, retval] int* Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall Eof([out, retval] int* result);
    [id(0x000000CD)]
    HRESULT _stdcall CloseQuery(void);
    [id(0x000000CE)]
    HRESULT _stdcall ClearTextSQL(void);
    [id(0x000000CF)]
    HRESULT _stdcall SetTextSQL([in] BSTR text_sql);
    [id(0x000000D0)]
    HRESULT _stdcall SetStringParamQuery([in] BSTR param_name, [in] BSTR param_value, [out, retval] int* result);
    [id(0x000000D1)]
    HRESULT _stdcall ExecQuery([out, retval] int* result);
    [id(0x000000D2)]
    HRESULT _stdcall ExecProc([out, retval] int* result);
    [id(0x000000D3)]
    HRESULT _stdcall NextRecord([out, retval] int* result);
    [id(0x000000D4)]
    HRESULT _stdcall GetStringValueField([in] BSTR field_name, [out, retval] BSTR* result);
  };

  [
    uuid(A9CCA631-C937-4356-B893-B9A5FB0A35BC),
    helpstring("Dispatch interface for QueryUpdate Object"),
    dual,
    oleautomation
  ]
  interface IQueryUpdate: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall flError([out, retval] int* Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall TextError([out, retval] BSTR* Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall RecordCount([out, retval] int* Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall Eof([out, retval] int* Value);
    [id(0x000000CD)]
    HRESULT _stdcall CloseQuery(void);
    [id(0x000000CE)]
    HRESULT _stdcall ClearTextSQL(void);
    [id(0x000000CF)]
    HRESULT _stdcall SetTextSQL([in] BSTR text_sql);
    [id(0x000000D0)]
    HRESULT _stdcall SetStringParamQuery([in] BSTR param_name, [in] BSTR param_value, [out, retval] int* result);
    [id(0x000000D1)]
    HRESULT _stdcall ExecQuery([out, retval] int* result);
    [id(0x000000D2)]
    HRESULT _stdcall ExecProc([out, retval] int* result);
    [id(0x000000D3)]
    HRESULT _stdcall NextRecord([out, retval] int* result);
    [id(0x000000D4)]
    HRESULT _stdcall GetStringValueField([in] BSTR field_name, [out, retval] BSTR* result);
    [id(0x000000D5)]
    HRESULT _stdcall StartTransaction([out, retval] int* result);
    [id(0x000000D6)]
    HRESULT _stdcall CommitTransaction([out, retval] int* result);
    [id(0x000000D7)]
    HRESULT _stdcall RollbackTransaction([out, retval] int* result);
  };

  [
    uuid(9B017A0F-A0BD-40F2-AB93-56901A0CA2AA),
    helpstring("Dispatch interface for DMConnection Object"),
    dual,
    oleautomation
  ]
  interface IDMConnectionImpl: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall flError([out, retval] int* Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall TextError([out, retval] BSTR* Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall ConnectString([out, retval] BSTR* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall ConnectString([in] BSTR Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall UserName([out, retval] BSTR* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall UserName([in] BSTR Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall UserName2([out, retval] BSTR* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall UserName2([in] BSTR Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall Password([in] BSTR Value);
    [propget, id(0x000000CF)]
    HRESULT _stdcall RoleName([out, retval] BSTR* Value);
    [propput, id(0x000000CF)]
    HRESULT _stdcall RoleName([in] BSTR Value);
    [propget, id(0x000000D0)]
    HRESULT _stdcall CharSet([out, retval] BSTR* Value);
    [propput, id(0x000000D0)]
    HRESULT _stdcall CharSet([in] BSTR Value);
    [id(0x000000D1)]
    HRESULT _stdcall ConnectBase([out, retval] int* result);
    [id(0x000000D2)]
    HRESULT _stdcall DisconnectBase(void);
    [propget, id(0x000000D3)]
    HRESULT _stdcall flConnected([out, retval] int* Value);
  };

  [
    uuid(096DCCA5-6D80-4C40-85E7-3130F3FE1E1B),
    helpstring("QueryRead Object")
  ]
  coclass QueryRead
  {
    [default] interface IQueryRead;
  };

  [
    uuid(45C6015F-9F63-42C3-A3CD-B2D0C6DE08A0),
    helpstring("QueryUpdate Object")
  ]
  coclass QueryUpdate
  {
    [default] interface IQueryUpdate;
  };

  [
    uuid(EB694A24-AEF9-4F0B-8B75-F39B77D1F627),
    helpstring("DMConnection Object")
  ]
  coclass DMConnectionImpl
  {
    [default] interface IDMConnectionImpl;
  };

};
